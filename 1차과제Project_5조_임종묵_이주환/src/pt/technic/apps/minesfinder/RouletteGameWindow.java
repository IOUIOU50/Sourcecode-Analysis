package pt.technic.apps.minesfinder;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class RouletteGameWindow extends JFrame{
    private ButtonMinefield[][] buttons;
    private Minefield minefield;
    public int mineCount;
    private SettingTable setting;
    public static final int buttonIndex = 49; //ASCII CODE. Equals integer '0'

    
    public RouletteGameWindow() {
        initComponents();
    }

    public RouletteGameWindow(Minefield minefield, SettingTable setting) {
    	this.setting = setting;
        initComponents();

        this.minefield = minefield;
        mineCount = minefield.getNumMines();
        buttons = new ButtonMinefield[minefield.getWidth()][minefield.getHeight()];
        
        getContentPane().setLayout(new GridLayout(minefield.getWidth(),
                minefield.getHeight()));
        minefield.placeMines(minefield.getWidth(), minefield.getHeight());

        KeyListener keyListener = new KeyListener() {
            @Override
            public void keyPressed(KeyEvent e) {
//                ButtonMinefield botao = (ButtonMinefield) e.getSource();
//                int x = botao.getWidth();
//                int y = botao.getHeight();
            	if(minefield.hasMine(0, (int)e.getKeyCode()-49)) {
            		buttons[0][(int)e.getKeyCode()-buttonIndex].setEstado(minefield.BUSTED);
            		mineCount--;
            		if(mineCount<=0) {
                		JOptionPane.showMessageDialog(getContentPane(), "If you confirmed, Click 'OK'", 
                				e.getKeyCode()-buttonIndex+1+"Person is selected!", JOptionPane.INFORMATION_MESSAGE);
                		setVisible(false);

            		}
            	}
            	else
            		buttons[0][(int)e.getKeyCode()-buttonIndex].setEstado(minefield.EMPTY);
            }

            @Override
            public void keyTyped(KeyEvent ke) {
            }

            @Override
            public void keyReleased(KeyEvent ke) {
            }
        };
        
        // Create buttons for the player
        for (int x = 0; x < minefield.getWidth(); x++) {
            for (int y = 0; y < minefield.getHeight(); y++) {
                buttons[x][y] = new ButtonMinefield(x, y);
                buttons[x][y].setText(Integer.toString(y+1));
                buttons[x][y].addKeyListener(keyListener);
                getContentPane().add(buttons[x][y]);
            }
        }

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Game");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(setting.getInGameWidth(), setting.getInGameHeight()));
        setResizable(true);


        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1094, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 553, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

}
